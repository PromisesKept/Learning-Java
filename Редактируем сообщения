import java.util.Scanner;

class Main {
     public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);

        Message message = new Message(scan.nextLine());

        String type = scan.next();
        while (!"end".equals(type)) {
            switch (type) {
                case "Caps":
                    message = new CapitalLetters(message);
                    break;
                case "NoDigits":
                    message = new NoDigits(message);
                    break;
                case "NoExtraSpaces":
                    message = new NoExtraSpaces(message);
                    break;
            }
            type = scan.next();
        }

        System.out.println(message.getMessage());
    }
}

class Message {
    private String message;
    
    public String getMessage() {
        return message;
    }
    
    public Message() {
    }
    
    public Message(String message) {
        this.message = message;
    }
}


//  чтобы была возможность заново реализовать описание. Собственно, сам "декоратор"
abstract class MessageDecorator extends Message {
    @Override
    public abstract String getMessage();
}


// сделать все буквы прописными
class CapitalLetters extends MessageDecorator {
    private Message message;
    
    public CapitalLetters(Message message) {
        this.message = message;
    }
    
    @Override
    public String getMessage() {
        return this.message.getMessage().toUpperCase();
    }
    
}

// удалить все лишние пробелы в начале и в конце, а также между словами оставить ровно один пробел
class NoExtraSpaces extends MessageDecorator {
    private Message message;
    
    public NoExtraSpaces(Message message) {
        this.message = message;
    }
    
    @Override
    public String getMessage() {
        String[] arr = message.getMessage().split(" +");
        var text = new StringBuilder();
        for (int i = 0; i < arr.length; i++) {
            text.append(arr[i] + " ");
        }
        return text.toString().trim();
    }
    
}

// удалить все цифры в строке 
class NoDigits extends MessageDecorator {
    private Message message;
    
    public NoDigits(Message message) {
        this.message = message;
    }
    
    @Override
    public String getMessage() {
        char[] arr = message.getMessage().toCharArray();
        var text = new StringBuilder();
        for (int i = 0; i < arr.length; i++) {
            if (Character.isDigit(arr[i])) continue;
            else text.append(arr[i] + "");
        }
        return text.toString();
    }
    
}
